{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.26.170.59819",
      "templateHash": "12411843699356705798"
    },
    "name": "Naming Conventions Module",
    "description": "This module is used to create a naming convention for resources in Azure",
    "owner": "Arinco"
  },
  "parameters": {
    "companyPrefix": {
      "type": "string",
      "metadata": {
        "description": "Company prefix."
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Deployment location."
      }
    },
    "geoLocationCodes": {
      "type": "object",
      "defaultValue": {
        "australiacentral": "acl",
        "australiacentral2": "acl2",
        "australiaeast": "ae",
        "australiasoutheast": "ase",
        "brazilsouth": "brs",
        "centraluseuap": "ccy",
        "canadacentral": "cnc",
        "canadaeast": "cne",
        "centralus": "cus",
        "eastasia": "ea",
        "eastus2euap": "ecy",
        "eastus": "eus",
        "eastus2": "eus2",
        "francecentral": "frc",
        "francesouth": "frs",
        "germanynorth": "gn",
        "germanywestcentral": "gwc",
        "centralindia": "inc",
        "southindia": "ins",
        "westindia": "inw",
        "japaneast": "jpe",
        "japanwest": "jpw",
        "koreacentral": "krc",
        "koreasouth": "krs",
        "northcentralus": "ncus",
        "northeurope": "ne",
        "norwayeast": "nwe",
        "norwaywest": "nww",
        "southafricanorth": "san",
        "southafricawest": "saw",
        "southcentralus": "scus",
        "swedencentral": "sdc",
        "swedensouth": "sds",
        "southeastasia": "sea",
        "switzerlandnorth": "szn",
        "switzerlandwest": "szw",
        "uaecentral": "uac",
        "uaenorth": "uan",
        "uksouth": "uks",
        "ukwest": "ukw",
        "westcentralus": "wcus",
        "westeurope": "we",
        "westus": "wus",
        "westus2": "wus2",
        "usdodcentral": "udc",
        "usdodeast": "ude",
        "usgovarizona": "uga",
        "usgoviowa": "ugi",
        "usgovtexas": "ugt",
        "usgovvirginia": "ugv",
        "chinanorth": "bjb",
        "chinanorth2": "bjb2",
        "chinaeast": "sha",
        "chinaeast2": "sha2",
        "germanycentral": "gec",
        "germanynortheast": "gne"
      },
      "metadata": {
        "description": "Optional. Geo-location codes for resources."
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The name of the environment."
      }
    },
    "descriptor": {
      "type": "string",
      "defaultValue": "<descriptor>",
      "metadata": {
        "description": "Optional. Short description of the application or service name."
      }
    },
    "locationIdentifier": {
      "type": "string",
      "defaultValue": "[if(contains(parameters('geoLocationCodes'), parameters('location')), format('{0}', parameters('geoLocationCodes')[toLower(parameters('location'))]), parameters('location'))]",
      "minLength": 2,
      "maxLength": 4,
      "metadata": {
        "description": "Optional. The geo-location identifier used for all resources."
      }
    }
  },
  "variables": {
    "prefix": "[format('{0}-{1}{2}-{3}', parameters('companyPrefix'), parameters('locationIdentifier'), if(not(empty(parameters('environment'))), format('-{0}', parameters('environment')), ''), parameters('descriptor'))]",
    "acrSuffix": "cr",
    "aciSuffix": "ci",
    "alertSuffix": "alert",
    "apimSuffix": "apim",
    "actionGroupSuffix": "ag",
    "appGatewaySuffix": "agw",
    "appGatewayPolicySuffix": "waf",
    "appInsightsSuffix": "appi",
    "appServicePlanSuffix": "asp",
    "aksSuffix": "aks",
    "autoAccountSuffix": "aa",
    "availabilitySetSuffix": "avail",
    "bastionSuffix": "bas",
    "budgetSuffix": "bgt",
    "cosmosDbSuffix": "cosmos",
    "ddosProtectionPlanSuffix": "ddos",
    "dnsResolverSuffix": "dnspr",
    "expressRouteCircuitSuffix": "erc",
    "externalLoadBalancerSuffix": "lbe",
    "firewallSuffix": "afw",
    "firewallPolicySuffix": "afwp",
    "frontDoorSuffix": "afd",
    "internalLoadBalancerSuffix": "lbi",
    "keyVaultSuffix": "kv",
    "localNetworkGatewaySuffix": "lgw",
    "logAnalyticsSuffix": "log",
    "logicAppSuffix": "logic",
    "mlWorkspaceSuffix": "mlw",
    "managedIdentitySuffix": "id",
    "networkInterfaceSuffix": "nic",
    "nsgSuffix": "nsg",
    "nsgFlowLogSuffix": "flow",
    "networkWatcherSuffix": "nw",
    "publicIpSuffix": "pip",
    "recoveryServicesVaultSuffix": "rsv",
    "resourceGroupSuffix": "rg",
    "routeTableSuffix": "rt",
    "sqlDbSuffix": "sqldb",
    "sqlServerSuffix": "sql",
    "storageAccountSuffix": "st",
    "trafficManagerSuffix": "traf",
    "virtualMachineSuffix": "vm",
    "virtualMachineScaleSetSuffix": "vmss",
    "vnetSuffix": "vnet",
    "vnetGatewaySuffix": "vgw",
    "vwanSuffix": "vwan",
    "vwanHubSuffix": "vhub",
    "webAppSuffix": "app"
  },
  "resources": [],
  "outputs": {
    "acr": {
      "type": "object",
      "metadata": {
        "description": "Azure container registry (ACR) name."
      },
      "value": {
        "name": "[format('{0}{1}{2}{3}{4}', parameters('companyPrefix'), parameters('locationIdentifier'), if(not(empty(parameters('environment'))), format('{0}', parameters('environment')), ''), parameters('descriptor'), variables('acrSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('acrSuffix')]"
      }
    },
    "aci": {
      "type": "object",
      "metadata": {
        "description": "Azure Container Instance (ACI) name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('aciSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('aciSuffix')]"
      }
    },
    "alert": {
      "type": "object",
      "metadata": {
        "description": "Azure Kubernetes Service (AKS) name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('alertSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('alertSuffix')]"
      }
    },
    "apim": {
      "type": "object",
      "metadata": {
        "description": "API Management (APIM) name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('apimSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('apimSuffix')]"
      }
    },
    "actionGroup": {
      "type": "object",
      "metadata": {
        "description": "Action group name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('actionGroupSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('actionGroupSuffix')]"
      }
    },
    "appGateway": {
      "type": "object",
      "metadata": {
        "description": "Application Gateway name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('appGatewaySuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('appGatewaySuffix')]"
      }
    },
    "appGatewayPolicy": {
      "type": "object",
      "metadata": {
        "description": "Application Gateway WAF policy name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('appGatewayPolicySuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('appGatewayPolicySuffix')]"
      }
    },
    "appInsights": {
      "type": "object",
      "metadata": {
        "description": "Application Insights name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('appInsightsSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('appInsightsSuffix')]"
      }
    },
    "appServicePlan": {
      "type": "object",
      "metadata": {
        "description": "App Service Plan name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('appServicePlanSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('appServicePlanSuffix')]"
      }
    },
    "aks": {
      "type": "object",
      "metadata": {
        "description": "Azure Kubernetes Service (AKS) name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('aksSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('aksSuffix')]"
      }
    },
    "automationAccount": {
      "type": "object",
      "metadata": {
        "description": "Azure Automation Account name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('autoAccountSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('autoAccountSuffix')]"
      }
    },
    "availabilitySet": {
      "type": "object",
      "metadata": {
        "description": "Availability Set name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('availabilitySetSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('availabilitySetSuffix')]"
      }
    },
    "bastion": {
      "type": "object",
      "metadata": {
        "description": "Azure Bastion name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('bastionSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('bastionSuffix')]"
      }
    },
    "budget": {
      "type": "object",
      "metadata": {
        "description": "Budget name."
      },
      "value": {
        "name": "[format('{0}-{1}', replace(trim(subscription().displayName), ' ', ''), variables('budgetSuffix'))]",
        "suffix": "[variables('budgetSuffix')]"
      }
    },
    "cosmosDb": {
      "type": "object",
      "metadata": {
        "description": "Azure Cosmos DB name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('cosmosDbSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('cosmosDbSuffix')]"
      }
    },
    "ddosProtectionPlan": {
      "type": "object",
      "metadata": {
        "description": "DDoS Protection Plan name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('ddosProtectionPlanSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('ddosProtectionPlanSuffix')]"
      }
    },
    "dnsResolver": {
      "type": "object",
      "metadata": {
        "description": "DNS Resolver name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('dnsResolverSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('dnsResolverSuffix')]"
      }
    },
    "expressRouteCircuit": {
      "type": "object",
      "metadata": {
        "description": "ExpressRoute Circuit name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('expressRouteCircuitSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('expressRouteCircuitSuffix')]"
      }
    },
    "externalLoadBalancer": {
      "type": "object",
      "metadata": {
        "description": "External Load Balancer name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('externalLoadBalancerSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('externalLoadBalancerSuffix')]"
      }
    },
    "firewall": {
      "type": "object",
      "metadata": {
        "description": "Firewall name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('firewallSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('firewallSuffix')]"
      }
    },
    "firewallPolicy": {
      "type": "object",
      "metadata": {
        "description": "Firewall Policy name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('firewallPolicySuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('firewallPolicySuffix')]"
      }
    },
    "frontDoor": {
      "type": "object",
      "metadata": {
        "description": "Front Door name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('frontDoorSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('frontDoorSuffix')]"
      }
    },
    "internalLoadBalancer": {
      "type": "object",
      "metadata": {
        "description": "Function App name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('internalLoadBalancerSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('internalLoadBalancerSuffix')]"
      }
    },
    "keyVault": {
      "type": "object",
      "metadata": {
        "description": "Key Vault name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('keyVaultSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('keyVaultSuffix')]"
      }
    },
    "localNetworkGateway": {
      "type": "object",
      "metadata": {
        "description": "Load Balancer name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('localNetworkGatewaySuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('localNetworkGatewaySuffix')]"
      }
    },
    "logAnalytics": {
      "type": "object",
      "metadata": {
        "description": "Log Analytics name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('logAnalyticsSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('logAnalyticsSuffix')]"
      }
    },
    "logicApp": {
      "type": "object",
      "metadata": {
        "description": "Logic App name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('logicAppSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('logicAppSuffix')]"
      }
    },
    "mlWorkspace": {
      "type": "object",
      "metadata": {
        "description": "Machine Learning Workspace name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('mlWorkspaceSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('mlWorkspaceSuffix')]"
      }
    },
    "managedIdentity": {
      "type": "object",
      "metadata": {
        "description": "Managed Identity name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('managedIdentitySuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('managedIdentitySuffix')]"
      }
    },
    "networkInterface": {
      "type": "object",
      "metadata": {
        "description": "Network Interface name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('networkInterfaceSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('networkInterfaceSuffix')]"
      }
    },
    "nsg": {
      "type": "object",
      "metadata": {
        "description": "Network Security Group name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('nsgSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('nsgSuffix')]"
      }
    },
    "nsgFlowLog": {
      "type": "object",
      "metadata": {
        "description": "Network Security Group Flow Log name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('nsgFlowLogSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('nsgFlowLogSuffix')]"
      }
    },
    "networkWatcher": {
      "type": "object",
      "metadata": {
        "description": "Network Watcher name."
      },
      "value": {
        "name": "[format('{0}-{1}-{2}', parameters('companyPrefix'), parameters('locationIdentifier'), variables('networkWatcherSuffix'))]",
        "location": "[parameters('locationIdentifier')]",
        "suffix": "[variables('networkWatcherSuffix')]"
      }
    },
    "publicIp": {
      "type": "object",
      "metadata": {
        "description": "Public IP Address name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('publicIpSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('publicIpSuffix')]"
      }
    },
    "recoveryServicesVault": {
      "type": "object",
      "metadata": {
        "description": "Recovery Services Vault name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('recoveryServicesVaultSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('recoveryServicesVaultSuffix')]"
      }
    },
    "resourceGroup": {
      "type": "object",
      "metadata": {
        "description": "Resource Group name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('resourceGroupSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('resourceGroupSuffix')]"
      }
    },
    "routeTable": {
      "type": "object",
      "metadata": {
        "description": "Route Table name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('routeTableSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('routeTableSuffix')]"
      }
    },
    "sqlDb": {
      "type": "object",
      "metadata": {
        "description": "SQL Database name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('sqlDbSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('sqlDbSuffix')]"
      }
    },
    "sqlServer": {
      "type": "object",
      "metadata": {
        "description": "SQL Server name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('sqlServerSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('sqlServerSuffix')]"
      }
    },
    "storageAccount": {
      "type": "object",
      "metadata": {
        "description": "Storage Account name."
      },
      "value": {
        "name": "[format('{0}{1}{2}{3}{4}', parameters('companyPrefix'), parameters('locationIdentifier'), if(not(empty(parameters('environment'))), format('{0}', parameters('environment')), ''), parameters('descriptor'), variables('storageAccountSuffix'))]",
        "suffix": "[variables('storageAccountSuffix')]"
      }
    },
    "trafficManager": {
      "type": "object",
      "metadata": {
        "description": "Traffic Manager name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('trafficManagerSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('trafficManagerSuffix')]"
      }
    },
    "virtualMachine": {
      "type": "object",
      "metadata": {
        "description": "Virtual Machine name."
      },
      "value": {
        "name": "[format('{0}{1}{2}{3}{4}', parameters('companyPrefix'), parameters('locationIdentifier'), if(not(empty(parameters('environment'))), format('{0}', parameters('environment')), ''), parameters('descriptor'), variables('virtualMachineSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('virtualMachineSuffix')]"
      }
    },
    "virtualMachineScaleSet": {
      "type": "object",
      "metadata": {
        "description": "Virtual Machine Scale Set name."
      },
      "value": {
        "name": "[format('{0}{1}{2}{3}{4}', parameters('companyPrefix'), parameters('locationIdentifier'), if(not(empty(parameters('environment'))), format('{0}', parameters('environment')), ''), parameters('descriptor'), variables('virtualMachineScaleSetSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('virtualMachineScaleSetSuffix')]"
      }
    },
    "vnet": {
      "type": "object",
      "metadata": {
        "description": "Virtual Network name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('vnetSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('vnetSuffix')]"
      }
    },
    "vnetGateway": {
      "type": "object",
      "metadata": {
        "description": "Virtual Network Gateway name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('vnetGatewaySuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('vnetGatewaySuffix')]"
      }
    },
    "vwan": {
      "type": "object",
      "metadata": {
        "description": "Virtual WAN name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('vwanSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('vwanSuffix')]"
      }
    },
    "vwanHub": {
      "type": "object",
      "metadata": {
        "description": "Virtual WAN Hub name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('vwanHubSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('vwanHubSuffix')]"
      }
    },
    "webApp": {
      "type": "object",
      "metadata": {
        "description": "Web App name."
      },
      "value": {
        "name": "[format('{0}-{1}', variables('prefix'), variables('webAppSuffix'))]",
        "prefix": "[parameters('companyPrefix')]",
        "location": "[parameters('locationIdentifier')]",
        "environment": "[parameters('environment')]",
        "descriptor": "[parameters('descriptor')]",
        "suffix": "[variables('webAppSuffix')]"
      }
    }
  }
}