{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.26.170.59819",
      "templateHash": "10792726003773043349"
    },
    "name": "Naming Conventions Module",
    "description": "This module is used to create a naming convention for resources in Azure.",
    "owner": "Arinco"
  },
  "definitions": {
    "nameType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        }
      },
      "metadata": {
        "__bicep_export!": true
      }
    }
  },
  "parameters": {
    "prefixes": {
      "type": "array",
      "metadata": {
        "description": "Prefixes to set (in order) for the resource name."
      }
    },
    "suffixes": {
      "type": "array",
      "metadata": {
        "description": "Suffixes to set (in order) for the resource name."
      }
    },
    "separator": {
      "type": "string",
      "defaultValue": "-",
      "metadata": {
        "description": "Optional. Separator to use for the resource name, e.g. '-' or '_'."
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Deployment location."
      }
    },
    "geoLocationCodes": {
      "type": "object",
      "defaultValue": {
        "australiacentral": "acl",
        "australiacentral2": "acl2",
        "australiaeast": "ae",
        "australiasoutheast": "ase",
        "brazilsouth": "brs",
        "centraluseuap": "ccy",
        "canadacentral": "cnc",
        "canadaeast": "cne",
        "centralus": "cus",
        "eastasia": "ea",
        "eastus2euap": "ecy",
        "eastus": "eus",
        "eastus2": "eus2",
        "francecentral": "frc",
        "francesouth": "frs",
        "germanynorth": "gn",
        "germanywestcentral": "gwc",
        "centralindia": "inc",
        "southindia": "ins",
        "westindia": "inw",
        "japaneast": "jpe",
        "japanwest": "jpw",
        "koreacentral": "krc",
        "koreasouth": "krs",
        "northcentralus": "ncus",
        "northeurope": "ne",
        "norwayeast": "nwe",
        "norwaywest": "nww",
        "southafricanorth": "san",
        "southafricawest": "saw",
        "southcentralus": "scus",
        "swedencentral": "sdc",
        "swedensouth": "sds",
        "southeastasia": "sea",
        "switzerlandnorth": "szn",
        "switzerlandwest": "szw",
        "uaecentral": "uac",
        "uaenorth": "uan",
        "uksouth": "uks",
        "ukwest": "ukw",
        "westcentralus": "wcus",
        "westeurope": "we",
        "westus": "wus",
        "westus2": "wus2",
        "usdodcentral": "udc",
        "usdodeast": "ude",
        "usgovarizona": "uga",
        "usgoviowa": "ugi",
        "usgovtexas": "ugt",
        "usgovvirginia": "ugv",
        "chinanorth": "bjb",
        "chinanorth2": "bjb2",
        "chinaeast": "sha",
        "chinaeast2": "sha2",
        "germanycentral": "gec",
        "germanynortheast": "gne"
      },
      "metadata": {
        "description": "Optional. Geo-location codes for resources."
      }
    },
    "locationIdentifier": {
      "type": "string",
      "defaultValue": "[if(contains(parameters('geoLocationCodes'), parameters('location')), format('{0}', parameters('geoLocationCodes')[toLower(parameters('location'))]), parameters('location'))]",
      "minLength": 2,
      "maxLength": 4,
      "metadata": {
        "description": "Optional. The geo-location identifier used for all resources."
      }
    }
  },
  "variables": {
    "prefix": "[join(parameters('prefixes'), parameters('separator'))]",
    "suffix": "[join(parameters('suffixes'), parameters('separator'))]",
    "baseName": "[toLower(replace(format('{0}{1}{2}', variables('prefix'), parameters('separator'), variables('suffix')), '**location**', parameters('locationIdentifier')))]",
    "acrSlug": "cr",
    "aciSlug": "ci",
    "alertSlug": "alert",
    "apimSlug": "apim",
    "actionGroupSlug": "ag",
    "appGatewaySlug": "agw",
    "appGatewayPolicySlug": "waf",
    "appInsightsSlug": "appi",
    "appServicePlanSlug": "asp",
    "aksSlug": "aks",
    "autoAccountSlug": "aa",
    "availabilitySetSlug": "avail",
    "bastionSlug": "bas",
    "budgetSlug": "bgt",
    "cosmosDbSlug": "cosmos",
    "ddosProtectionPlanSlug": "ddos",
    "dnsResolverSlug": "dnspr",
    "expressRouteCircuitSlug": "erc",
    "externalLoadBalancerSlug": "lbe",
    "firewallSlug": "afw",
    "firewallPolicySlug": "afwp",
    "frontDoorSlug": "afd",
    "internalLoadBalancerSlug": "lbi",
    "keyVaultSlug": "kv",
    "localNetworkGatewaySlug": "lgw",
    "logAnalyticsSlug": "log",
    "logicAppSlug": "logic",
    "mlWorkspaceSlug": "mlw",
    "managedIdentitySlug": "id",
    "networkInterfaceSlug": "nic",
    "nsgSlug": "nsg",
    "nsgFlowLogSlug": "flow",
    "networkWatcherSlug": "nw",
    "publicIpSlug": "pip",
    "recoveryServicesVaultSlug": "rsv",
    "resourceGroupSlug": "rg",
    "routeTableSlug": "rt",
    "sqlDbSlug": "sqldb",
    "sqlServerSlug": "sql",
    "storageAccountSlug": "st",
    "trafficManagerSlug": "traf",
    "virtualMachineSlug": "vm",
    "virtualMachineScaleSetSlug": "vmss",
    "vnetSlug": "vnet",
    "vnetGatewaySlug": "vgw",
    "vwanSlug": "vwan",
    "vwanHubSlug": "vhub",
    "webAppSlug": "app"
  },
  "resources": {},
  "outputs": {
    "acr": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Azure container registry (ACR) name."
      },
      "value": {
        "name": "[replace(format('{0}{1}', variables('baseName'), variables('acrSlug')), parameters('separator'), '')]",
        "slug": "[variables('acrSlug')]"
      }
    },
    "aci": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Azure Container Instance (ACI) name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('aciSlug'))]",
        "slug": "[variables('aciSlug')]"
      }
    },
    "alert": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Alert name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('alertSlug'))]",
        "slug": "[variables('alertSlug')]"
      }
    },
    "apim": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "API Management (APIM) name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('apimSlug'))]",
        "slug": "[variables('apimSlug')]"
      }
    },
    "actionGroup": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Action group name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('actionGroupSlug'))]",
        "slug": "[variables('actionGroupSlug')]"
      }
    },
    "appGateway": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Application Gateway name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('appGatewaySlug'))]",
        "slug": "[variables('appGatewaySlug')]"
      }
    },
    "appGatewayPolicy": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Application Gateway WAF policy name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('appGatewayPolicySlug'))]",
        "slug": "[variables('appGatewayPolicySlug')]"
      }
    },
    "appInsights": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Application Insights name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('appInsightsSlug'))]",
        "slug": "[variables('appInsightsSlug')]"
      }
    },
    "appServicePlan": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "App Service Plan name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('appServicePlanSlug'))]",
        "slug": "[variables('appServicePlanSlug')]"
      }
    },
    "aks": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Azure Kubernetes Service (AKS) name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('aksSlug'))]",
        "slug": "[variables('aksSlug')]"
      }
    },
    "automationAccount": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Azure Automation Account name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('autoAccountSlug'))]",
        "slug": "[variables('autoAccountSlug')]"
      }
    },
    "availabilitySet": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Availability Set name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('availabilitySetSlug'))]",
        "slug": "[variables('availabilitySetSlug')]"
      }
    },
    "bastion": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Azure Bastion name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('bastionSlug'))]",
        "slug": "[variables('bastionSlug')]"
      }
    },
    "budget": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Budget name."
      },
      "value": {
        "name": "[format('{0}-{1}', replace(trim(subscription().displayName), ' ', ''), variables('budgetSlug'))]",
        "slug": "[variables('budgetSlug')]"
      }
    },
    "cosmosDb": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Azure Cosmos DB name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('cosmosDbSlug'))]",
        "slug": "[variables('cosmosDbSlug')]"
      }
    },
    "ddosProtectionPlan": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "DDoS Protection Plan name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('ddosProtectionPlanSlug'))]",
        "slug": "[variables('ddosProtectionPlanSlug')]"
      }
    },
    "dnsResolver": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "DNS Resolver name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('dnsResolverSlug'))]",
        "slug": "[variables('dnsResolverSlug')]"
      }
    },
    "expressRouteCircuit": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "ExpressRoute Circuit name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('expressRouteCircuitSlug'))]",
        "slug": "[variables('expressRouteCircuitSlug')]"
      }
    },
    "externalLoadBalancer": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "External Load Balancer name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('externalLoadBalancerSlug'))]",
        "slug": "[variables('externalLoadBalancerSlug')]"
      }
    },
    "firewall": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Firewall name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('firewallSlug'))]",
        "slug": "[variables('firewallSlug')]"
      }
    },
    "firewallPolicy": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Firewall Policy name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('firewallPolicySlug'))]",
        "slug": "[variables('firewallPolicySlug')]"
      }
    },
    "frontDoor": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Front Door name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('frontDoorSlug'))]",
        "slug": "[variables('frontDoorSlug')]"
      }
    },
    "internalLoadBalancer": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Function App name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('internalLoadBalancerSlug'))]",
        "slug": "[variables('internalLoadBalancerSlug')]"
      }
    },
    "keyVault": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Key Vault name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('keyVaultSlug'))]",
        "slug": "[variables('keyVaultSlug')]"
      }
    },
    "localNetworkGateway": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Load Balancer name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('localNetworkGatewaySlug'))]",
        "slug": "[variables('localNetworkGatewaySlug')]"
      }
    },
    "logAnalytics": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Log Analytics name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('logAnalyticsSlug'))]",
        "slug": "[variables('logAnalyticsSlug')]"
      }
    },
    "logicApp": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Logic App name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('logicAppSlug'))]",
        "slug": "[variables('logicAppSlug')]"
      }
    },
    "mlWorkspace": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Machine Learning Workspace name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('mlWorkspaceSlug'))]",
        "slug": "[variables('mlWorkspaceSlug')]"
      }
    },
    "managedIdentity": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Managed Identity name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('managedIdentitySlug'))]",
        "slug": "[variables('managedIdentitySlug')]"
      }
    },
    "networkInterface": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Network Interface name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('networkInterfaceSlug'))]",
        "slug": "[variables('networkInterfaceSlug')]"
      }
    },
    "nsg": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Network Security Group name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('nsgSlug'))]",
        "slug": "[variables('nsgSlug')]"
      }
    },
    "nsgFlowLog": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Network Security Group Flow Log name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('nsgFlowLogSlug'))]",
        "slug": "[variables('nsgFlowLogSlug')]"
      }
    },
    "networkWatcher": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Network Watcher name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('networkWatcherSlug'))]",
        "slug": "[variables('networkWatcherSlug')]"
      }
    },
    "publicIp": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Public IP Address name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('publicIpSlug'))]",
        "slug": "[variables('publicIpSlug')]"
      }
    },
    "recoveryServicesVault": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Recovery Services Vault name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('recoveryServicesVaultSlug'))]",
        "slug": "[variables('recoveryServicesVaultSlug')]"
      }
    },
    "resourceGroup": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Resource Group name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('resourceGroupSlug'))]",
        "slug": "[variables('resourceGroupSlug')]"
      }
    },
    "routeTable": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Route Table name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('routeTableSlug'))]",
        "slug": "[variables('routeTableSlug')]"
      }
    },
    "sqlDb": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "SQL Database name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('sqlDbSlug'))]",
        "slug": "[variables('sqlDbSlug')]"
      }
    },
    "sqlServer": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "SQL Server name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('sqlServerSlug'))]",
        "slug": "[variables('sqlServerSlug')]"
      }
    },
    "storageAccount": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Storage Account name."
      },
      "value": {
        "name": "[replace(format('{0}{1}', variables('baseName'), variables('storageAccountSlug')), parameters('separator'), '')]",
        "slug": "[variables('storageAccountSlug')]"
      }
    },
    "trafficManager": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Traffic Manager name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('trafficManagerSlug'))]",
        "slug": "[variables('trafficManagerSlug')]"
      }
    },
    "virtualMachine": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Virtual Machine name."
      },
      "value": {
        "name": "[replace(format('{0}{1}', variables('baseName'), variables('virtualMachineSlug')), parameters('separator'), '')]",
        "slug": "[variables('virtualMachineSlug')]"
      }
    },
    "virtualMachineScaleSet": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Virtual Machine Scale Set name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('virtualMachineScaleSetSlug'))]",
        "slug": "[variables('virtualMachineScaleSetSlug')]"
      }
    },
    "vnet": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Virtual Network name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('vnetSlug'))]",
        "slug": "[variables('vnetSlug')]"
      }
    },
    "vnetGateway": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Virtual Network Gateway name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('vnetGatewaySlug'))]",
        "slug": "[variables('vnetGatewaySlug')]"
      }
    },
    "vwan": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Virtual WAN name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('vwanSlug'))]",
        "slug": "[variables('vwanSlug')]"
      }
    },
    "vwanHub": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Virtual WAN Hub name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('vwanHubSlug'))]",
        "slug": "[variables('vwanHubSlug')]"
      }
    },
    "webApp": {
      "$ref": "#/definitions/nameType",
      "metadata": {
        "description": "Web App name."
      },
      "value": {
        "name": "[format('{0}{1}{2}', variables('baseName'), parameters('separator'), variables('webAppSlug'))]",
        "slug": "[variables('webAppSlug')]"
      }
    }
  }
}