{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.32.4.45862",
      "templateHash": "10801864769973873734"
    },
    "name": "App Service Plans",
    "description": "This module deploys Microsoft.web/severFarms aka App Service Plans",
    "owner": "Arinco"
  },
  "parameters": {
    "name": {
      "type": "string",
      "minLength": 1,
      "maxLength": 40,
      "metadata": {
        "description": "The resource name."
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The geo-location where the resource lives."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "doc": "https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/tag-resources?tabs=bicep#arm-templates",
        "example": {
          "tagKey": "string"
        },
        "description": "Optional. Resource tags."
      }
    },
    "resourceLock": {
      "type": "string",
      "defaultValue": "NotSpecified",
      "allowedValues": [
        "CanNotDelete",
        "NotSpecified",
        "ReadOnly"
      ],
      "metadata": {
        "description": "Optional. Specify the type of resource lock."
      }
    },
    "enableDiagnostics": {
      "type": "bool",
      "defaultValue": "[or(or(or(not(empty(parameters('diagnosticStorageAccountId'))), not(empty(parameters('diagnosticLogAnalyticsWorkspaceId')))), not(empty(parameters('diagnosticEventHubAuthorizationRuleId')))), not(empty(parameters('diagnosticEventHubName'))))]",
      "metadata": {
        "description": "Optional. Enable diagnostic logging."
      }
    },
    "diagnosticMetricsToEnable": {
      "type": "array",
      "defaultValue": [
        "AllMetrics"
      ],
      "allowedValues": [
        "AllMetrics"
      ],
      "metadata": {
        "description": "Optional. The name of metrics that will be streamed."
      }
    },
    "diagnosticLogsRetentionInDays": {
      "type": "int",
      "defaultValue": 0,
      "minValue": 0,
      "maxValue": 365,
      "metadata": {
        "description": "Optional. Specifies the number of days that logs will be kept for; a value of 0 will retain data indefinitely."
      }
    },
    "diagnosticStorageAccountId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Storage account resource id. Only required if enableDiagnostics is set to true."
      }
    },
    "diagnosticLogAnalyticsWorkspaceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Log analytics workspace resource id. Only required if enableDiagnostics is set to true."
      }
    },
    "diagnosticEventHubAuthorizationRuleId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Event hub authorization rule for the Event Hubs namespace. Only required if enableDiagnostics is set to true."
      }
    },
    "diagnosticEventHubName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Event hub name. Only required if enableDiagnostics is set to true."
      }
    },
    "elasticScaleEnabled": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. ServerFarm supports ElasticScale. Apps in this plan will scale as if the ServerFarm was ElasticPremium sku."
      }
    },
    "hostingEnvironmentProfileId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. ResourceId of the App Service Environment to use for the App Service plan."
      }
    },
    "kind": {
      "type": "string",
      "defaultValue": "app",
      "allowedValues": [
        "app",
        "elastic"
      ],
      "metadata": {
        "description": "Optional. The kind of App Service Plan."
      }
    },
    "kubeEnvironmentProfileId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. ResourceId of the Kubernetes Environment to use for the App Service plan."
      }
    },
    "operatingSystem": {
      "type": "string",
      "defaultValue": "linux",
      "allowedValues": [
        "linux",
        "windows"
      ],
      "metadata": {
        "description": "Optional. The operating system of the App Service Plan."
      }
    },
    "perSiteScaling": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. If true, apps assigned to this App Service plan can be scaled independently. If false, apps assigned to this App Service plan will scale to all instances of the plan."
      }
    },
    "skuCapacity": {
      "type": "int",
      "defaultValue": 0,
      "minValue": 0,
      "maxValue": 10,
      "metadata": {
        "description": "Optional. Number of instances needed for the app service plan. 0 means not specified (allows for control ouside IaC)."
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "S1",
      "allowedValues": [
        "B1",
        "B2",
        "B3",
        "D1",
        "F1",
        "P0v3",
        "P1",
        "P1mv3",
        "P1v2",
        "P1v3",
        "P2",
        "P2mv3",
        "P2v2",
        "P2v3",
        "P3",
        "P3mv3",
        "P3v2",
        "P3v3",
        "S1",
        "S2",
        "S3",
        "WS1",
        "WS2",
        "WS3"
      ],
      "metadata": {
        "description": "Optional. Name of the resource SKU."
      }
    },
    "skuTier": {
      "type": "string",
      "defaultValue": "Shared",
      "allowedValues": [
        "Shared",
        "Free",
        "Basic",
        "Basic",
        "Basic",
        "Standard",
        "Standard",
        "Standard",
        "Premium",
        "Premium",
        "Premium",
        "PremiumV2",
        "PremiumV2",
        "PremiumV2",
        "Isolated",
        "Isolated",
        "Isolated",
        "Dynamic ",
        "WorkflowStandard"
      ],
      "metadata": {
        "description": "Optional. Name of the resource SKU Tier."
      }
    },
    "zoneRedundant": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. If this App Service Plan will perform availability zone balancing."
      }
    }
  },
  "variables": {
    "copy": [
      {
        "name": "diagnosticsMetrics",
        "count": "[length(parameters('diagnosticMetricsToEnable'))]",
        "input": {
          "category": "[parameters('diagnosticMetricsToEnable')[copyIndex('diagnosticsMetrics')]]",
          "timeGrain": null,
          "enabled": true,
          "retentionPolicy": {
            "enabled": true,
            "days": "[parameters('diagnosticLogsRetentionInDays')]"
          }
        }
      }
    ],
    "reserved": "[equals(parameters('operatingSystem'), 'linux')]",
    "diagnosticsName": "[toLower(format('{0}-dgs', parameters('name')))]",
    "lockName": "[toLower(format('{0}-{1}-lck', parameters('name'), parameters('resourceLock')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-09-01",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "kind": "[parameters('kind')]",
      "properties": {
        "elasticScaleEnabled": "[if(parameters('elasticScaleEnabled'), parameters('elasticScaleEnabled'), null())]",
        "hostingEnvironmentProfile": "[if(empty(parameters('hostingEnvironmentProfileId')), null(), createObject('id', parameters('hostingEnvironmentProfileId')))]",
        "kubeEnvironmentProfile": "[if(empty(parameters('kubeEnvironmentProfileId')), null(), createObject('id', parameters('kubeEnvironmentProfileId')))]",
        "perSiteScaling": "[if(parameters('perSiteScaling'), parameters('perSiteScaling'), null())]",
        "reserved": "[variables('reserved')]",
        "zoneRedundant": "[if(parameters('zoneRedundant'), parameters('zoneRedundant'), null())]"
      },
      "sku": "[union(createObject('name', parameters('skuName'), 'tier', parameters('skuTier')), if(equals(parameters('skuCapacity'), 0), createObject(), createObject('skuCapacity', parameters('skuCapacity'))))]"
    },
    {
      "condition": "[not(equals(parameters('resourceLock'), 'NotSpecified'))]",
      "type": "Microsoft.Authorization/locks",
      "apiVersion": "2020-05-01",
      "scope": "[format('Microsoft.Web/serverfarms/{0}', parameters('name'))]",
      "name": "[variables('lockName')]",
      "properties": {
        "level": "[parameters('resourceLock')]",
        "notes": "[if(equals(parameters('resourceLock'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot modify the resource or child resources.')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('name'))]"
      ]
    },
    {
      "condition": "[parameters('enableDiagnostics')]",
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Web/serverfarms/{0}', parameters('name'))]",
      "name": "[variables('diagnosticsName')]",
      "properties": {
        "workspaceId": "[if(empty(parameters('diagnosticLogAnalyticsWorkspaceId')), null(), parameters('diagnosticLogAnalyticsWorkspaceId'))]",
        "storageAccountId": "[if(empty(parameters('diagnosticStorageAccountId')), null(), parameters('diagnosticStorageAccountId'))]",
        "eventHubAuthorizationRuleId": "[if(empty(parameters('diagnosticEventHubAuthorizationRuleId')), null(), parameters('diagnosticEventHubAuthorizationRuleId'))]",
        "eventHubName": "[if(empty(parameters('diagnosticEventHubName')), null(), parameters('diagnosticEventHubName'))]",
        "metrics": "[variables('diagnosticsMetrics')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('name'))]"
      ]
    }
  ],
  "outputs": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the deployed app service plan resource."
      },
      "value": "[parameters('name')]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the deployed app service plan resource."
      },
      "value": "[resourceId('Microsoft.Web/serverfarms', parameters('name'))]"
    }
  }
}