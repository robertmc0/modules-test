{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.22.6.54827",
      "templateHash": "9933018385370019978"
    },
    "name": "Azure Search Service",
    "description": "Deploys Azure Search Service Account.",
    "owner": "Arinco"
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the Search Service Account."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. The location of the Search Service Account."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "doc": "https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/tag-resources?tabs=bicep#arm-templates",
        "example": {
          "tagKey": "string"
        },
        "description": "Optional. Resource tags."
      }
    },
    "sku": {
      "type": "string",
      "defaultValue": "standard",
      "allowedValues": [
        "basic",
        "free",
        "standard",
        "standard2",
        "standard3",
        "storage_optimized_l1",
        "storage_optimized_l2"
      ],
      "metadata": {
        "description": "Optional. The Sku of the Search Service Account."
      }
    },
    "hostingMode": {
      "type": "string",
      "defaultValue": "default",
      "allowedValues": [
        "default",
        "highDensity"
      ],
      "metadata": {
        "description": "Optional. The hosting mode of the Search Service Account. highDensity is only available for standard3 SKUs."
      }
    },
    "replicaCount": {
      "type": "int",
      "defaultValue": 1,
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12
      ],
      "metadata": {
        "guidance": "https://learn.microsoft.com/en-us/azure/search/search-capacity-planning",
        "description": "Optional. The number of replicas in the Search Service Account.  If specified, it must be a value between 1 and 12 inclusive for standard SKUs or between 1 and 3 inclusive for basic SKU."
      }
    },
    "partitionCount": {
      "type": "int",
      "defaultValue": 1,
      "allowedValues": [
        1,
        2,
        3,
        4,
        6,
        12
      ],
      "metadata": {
        "guidance": "https://learn.microsoft.com/en-us/azure/search/search-capacity-planning",
        "description": "Optional. The number of partitions in the Search Service Account. Values greater than 1 are only valid for standard SKUs. For standard3 services with hostingMode set to highDensity, the allowed values are between 1 and 3."
      }
    },
    "semanticSearch": {
      "type": "string",
      "defaultValue": "disabled",
      "allowedValues": [
        "disabled",
        "free",
        "standard"
      ],
      "metadata": {
        "description": "Optional. Enable/Disable semantic search."
      }
    },
    "publicNetworkAccess": {
      "type": "string",
      "defaultValue": "enabled",
      "allowedValues": [
        "enabled",
        "disabled"
      ],
      "metadata": {
        "description": "Optional. Enable/Disable public acccess."
      }
    },
    "authOptions": {
      "type": "object",
      "defaultValue": {
        "aadOrApiKey": {
          "aadAuthFailureMode": "http403"
        }
      },
      "metadata": {
        "example": {
          "aadOrApiKey": {
            "aadAuthFailureMode": "http401WithBearerChallenge or http403"
          },
          "apiKeyOnly": "any()"
        },
        "description": "Optional. The auth options of the Search Service Account."
      }
    },
    "systemAssignedIdentity": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Enables system assigned managed identity on the resource."
      }
    },
    "userAssignedIdentities": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "example": {
          "/subscriptions/<subscription>/resourceGroups/<rgp>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/dev-umi": {}
        },
        "description": "Optional. The ID(s) to assign to the resource."
      }
    },
    "disabledDataExfiltrationOptions": {
      "type": "string",
      "defaultValue": "All",
      "allowedValues": [
        "All"
      ],
      "metadata": {
        "description": "Optional. The data exfiltration options for the Search Service Account. Currently not able to be modified, param added for future service update."
      }
    },
    "allowedIpRanges": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed."
      }
    },
    "networkRuleSetDefaultAction": {
      "type": "string",
      "defaultValue": "Deny",
      "allowedValues": [
        "Allow",
        "Deny"
      ],
      "metadata": {
        "description": "Optional. The default action of allow or deny when no other rules match."
      }
    },
    "enableDiagnostics": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Enable diagnostic logging."
      }
    },
    "diagnosticLogCategoryGroupsToEnable": {
      "type": "array",
      "defaultValue": [
        "Audit"
      ],
      "allowedValues": [
        "Audit",
        "AllLogs"
      ],
      "metadata": {
        "description": "Optional. The name of log category groups that will be streamed."
      }
    },
    "diagnosticMetricsToEnable": {
      "type": "array",
      "defaultValue": [
        "AllMetrics"
      ],
      "allowedValues": [
        "AllMetrics"
      ],
      "metadata": {
        "description": "Optional. The name of metrics that will be streamed."
      }
    },
    "diagnosticLogAnalyticsWorkspaceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Resource ID of the diagnostic log analytics workspace."
      }
    },
    "diagnosticEventHubAuthorizationRuleId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Resource ID of the diagnostic event hub authorization rule for the Event Hubs namespace in which the event hub should be created or streamed to."
      }
    },
    "diagnosticEventHubName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Name of the diagnostic event hub within the namespace to which logs are streamed. Without this, an event hub is created for each log category."
      }
    },
    "diagnosticStorageAccountId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Resource ID of the diagnostic storage account."
      }
    },
    "resourcelock": {
      "type": "string",
      "defaultValue": "NotSpecified",
      "allowedValues": [
        "CanNotDelete",
        "NotSpecified",
        "ReadOnly"
      ],
      "metadata": {
        "description": "Optional. Specify the type of lock."
      }
    }
  },
  "variables": {
    "copy": [
      {
        "name": "diagnosticsLogs",
        "count": "[length(parameters('diagnosticLogCategoryGroupsToEnable'))]",
        "input": {
          "categoryGroup": "[parameters('diagnosticLogCategoryGroupsToEnable')[copyIndex('diagnosticsLogs')]]",
          "enabled": true
        }
      },
      {
        "name": "diagnosticsMetrics",
        "count": "[length(parameters('diagnosticMetricsToEnable'))]",
        "input": {
          "category": "[parameters('diagnosticMetricsToEnable')[copyIndex('diagnosticsMetrics')]]",
          "timeGrain": null,
          "enabled": true
        }
      },
      {
        "name": "ipRulesAllowedIpRanges",
        "count": "[length(parameters('allowedIpRanges'))]",
        "input": {
          "value": "[parameters('allowedIpRanges')[copyIndex('ipRulesAllowedIpRanges')]]",
          "action": "Allow"
        }
      }
    ],
    "identityType": "[if(parameters('systemAssignedIdentity'), if(not(empty(parameters('userAssignedIdentities'))), 'SystemAssigned,UserAssigned', 'SystemAssigned'), if(not(empty(parameters('userAssignedIdentities'))), 'UserAssigned', 'None'))]",
    "identity": "[if(not(equals(variables('identityType'), 'None')), createObject('type', variables('identityType'), 'userAssignedIdentities', if(not(empty(parameters('userAssignedIdentities'))), parameters('userAssignedIdentities'), null())), null())]",
    "lockName": "[toLower(format('{0}-{1}-lck', parameters('name'), parameters('resourcelock')))]",
    "diagnosticsName": "[toLower(format('{0}-dgs', parameters('name')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Search/searchServices",
      "apiVersion": "2021-04-01-preview",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "[parameters('sku')]"
      },
      "identity": "[variables('identity')]",
      "properties": {
        "authOptions": "[parameters('authOptions')]",
        "disabledDataExfiltrationOptions": [
          "[parameters('disabledDataExfiltrationOptions')]"
        ],
        "partitionCount": "[parameters('partitionCount')]",
        "replicaCount": "[parameters('replicaCount')]",
        "hostingMode": "[parameters('hostingMode')]",
        "semanticSearch": "[parameters('semanticSearch')]",
        "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
        "networkRuleSet": "[if(and(equals(not(empty(variables('ipRulesAllowedIpRanges'))), true()), equals(parameters('publicNetworkAccess'), 'disabled')), createObject('defaultAction', parameters('networkRuleSetDefaultAction'), 'ipRules', variables('ipRulesAllowedIpRanges')), null())]"
      }
    },
    {
      "condition": "[parameters('enableDiagnostics')]",
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Search/searchServices/{0}', parameters('name'))]",
      "name": "[variables('diagnosticsName')]",
      "properties": {
        "storageAccountId": "[if(not(empty(parameters('diagnosticStorageAccountId'))), parameters('diagnosticStorageAccountId'), null())]",
        "workspaceId": "[if(not(empty(parameters('diagnosticLogAnalyticsWorkspaceId'))), parameters('diagnosticLogAnalyticsWorkspaceId'), null())]",
        "eventHubAuthorizationRuleId": "[if(not(empty(parameters('diagnosticEventHubAuthorizationRuleId'))), parameters('diagnosticEventHubAuthorizationRuleId'), null())]",
        "eventHubName": "[if(not(empty(parameters('diagnosticEventHubName'))), parameters('diagnosticEventHubName'), null())]",
        "metrics": "[variables('diagnosticsMetrics')]",
        "logs": "[variables('diagnosticsLogs')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Search/searchServices', parameters('name'))]"
      ]
    },
    {
      "condition": "[not(equals(parameters('resourcelock'), 'NotSpecified'))]",
      "type": "Microsoft.Authorization/locks",
      "apiVersion": "2020-05-01",
      "scope": "[format('Microsoft.Search/searchServices/{0}', parameters('name'))]",
      "name": "[variables('lockName')]",
      "properties": {
        "level": "[parameters('resourcelock')]",
        "notes": "[if(equals(parameters('resourcelock'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot modify the resource or child resources.')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Search/searchServices', parameters('name'))]"
      ]
    }
  ],
  "outputs": {
    "id": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the deployed Search Service."
      },
      "value": "[resourceId('Microsoft.Search/searchServices', parameters('name'))]"
    },
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the deployed Search Service."
      },
      "value": "[parameters('name')]"
    }
  }
}