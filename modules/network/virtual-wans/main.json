{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.12.40.16777",
      "templateHash": "15175734220174276516"
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The resource name."
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The geo-location where the resource lives."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "doc": "https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/tag-resources?tabs=bicep#arm-templates",
        "example": {
          "tagKey": "string"
        },
        "description": "Optional. Resource tags."
      }
    },
    "allowBranchToBranchTraffic": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Allow branch to branch traffic."
      }
    },
    "allowVnetToVnetTraffic": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Allow Vnet to Vnet traffic."
      }
    },
    "disableVpnEncryption": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Vpn encryption to be disabled or not."
      }
    },
    "type": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Basic"
      ],
      "metadata": {
        "description": "Optional. The type of the VirtualWAN."
      }
    },
    "virtualHubs": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "doc": "https://learn.microsoft.com/en-us/azure/templates/microsoft.network/virtualhubs?pivots=deployment-language-bicep",
        "example": {
          "name": "string",
          "addressPrefix": "string",
          "hubRoutingPreference": "string",
          "virtualRouterAutoScaleConfiguration": {
            "minCapacity": 2
          }
        },
        "description": "Optional. Virtual Hub configuration."
      }
    },
    "resourceLock": {
      "type": "string",
      "defaultValue": "NotSpecified",
      "allowedValues": [
        "NotSpecified",
        "ReadOnly",
        "CanNotDelete"
      ],
      "metadata": {
        "description": "Optional. Specify the type of resource lock."
      }
    }
  },
  "variables": {
    "lockName": "[toLower(format('{0}-{1}-lck', parameters('name'), parameters('resourceLock')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualWans",
      "apiVersion": "2022-05-01",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "allowBranchToBranchTraffic": "[parameters('allowBranchToBranchTraffic')]",
        "allowVnetToVnetTraffic": "[parameters('allowVnetToVnetTraffic')]",
        "disableVpnEncryption": "[parameters('disableVpnEncryption')]",
        "type": "[parameters('type')]"
      }
    },
    {
      "copy": {
        "name": "virtualHub",
        "count": "[length(parameters('virtualHubs'))]"
      },
      "type": "Microsoft.Network/virtualHubs",
      "apiVersion": "2022-05-01",
      "name": "[parameters('virtualHubs')[copyIndex()].name]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "addressPrefix": "[parameters('virtualHubs')[copyIndex()].addressPrefix]",
        "hubRoutingPreference": "[if(contains(parameters('virtualHubs')[copyIndex()], 'hubRoutingPreference'), parameters('virtualHubs')[copyIndex()].hubRoutingPreference, null())]",
        "virtualRouterAutoScaleConfiguration": "[if(contains(parameters('virtualHubs')[copyIndex()], 'virtualRouterAutoScaleConfiguration'), parameters('virtualHubs')[copyIndex()].virtualRouterAutoScaleConfiguration, null())]",
        "virtualWan": {
          "id": "[resourceId('Microsoft.Network/virtualWans', parameters('name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualWans', parameters('name'))]"
      ]
    },
    {
      "condition": "[not(equals(parameters('resourceLock'), 'NotSpecified'))]",
      "type": "Microsoft.Authorization/locks",
      "apiVersion": "2017-04-01",
      "scope": "[format('Microsoft.Network/virtualWans/{0}', parameters('name'))]",
      "name": "[variables('lockName')]",
      "properties": {
        "level": "[parameters('resourceLock')]",
        "notes": "[if(equals(parameters('resourceLock'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot modify the resource or child resources.')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualWans', parameters('name'))]"
      ]
    }
  ],
  "outputs": {
    "name": {
      "type": "string",
      "value": "[parameters('name')]",
      "metadata": {
        "description": "The name of the deployed virtual wan."
      }
    },
    "resourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualWans', parameters('name'))]",
      "metadata": {
        "description": "The resource ID of the deployed virtual wan."
      }
    },
    "hubs": {
      "type": "array",
      "copy": {
        "count": "[length(range(0, length(parameters('virtualHubs'))))]",
        "input": {
          "name": "[parameters('virtualHubs')[range(0, length(parameters('virtualHubs')))[copyIndex()]].name]",
          "id": "[resourceId('Microsoft.Network/virtualHubs', parameters('virtualHubs')[range(0, length(parameters('virtualHubs')))[copyIndex()]].name)]"
        }
      },
      "metadata": {
        "description": "List of virtual hubs associated to the virtual wan."
      }
    }
  }
}