pool:
  vmImage: ubuntu-latest

steps:
  - checkout: self
    persistCredentials: true
    fetchDepth: 0

  - task: PowerShell@2
    condition: and(eq(variables['System.PullRequest.TargetBranch'], 'refs/heads/main'), eq(variables['Build.Reason'], 'PullRequest'))
    displayName: Validating Source Branch Name
    inputs:
      targetType: inline
      script: |
        $OldRevisionName = "$(System.PullRequest.SourceBranch)" -replace 'refs/heads/', ''
        $valid = "^(feature|bugfix)\/[a-zA-Z0-9-]+$"
        Write-Host "Branch: $OldRevisionName"
        if ($OldRevisionName -notmatch $valid -and $OldRevisionName -ne 'dev') {
          throw "Branch name '$OldRevisionName' is invalid. Must match pattern '$valid'"
        }

  - task: AzurePowerShell@5
    displayName: Get Changed Modules
    inputs:
      azureSubscription: <INSERT SVP eg:aad-app-adr-pf-svcp>
      ScriptType: FilePath
      ScriptPath: ./scripts/azure-devops/get-changed-modules.ps1
      ScriptArguments: -NewRevision $(Build.SourceVersion)
      azurePowerShellVersion: LatestVersion

  - task: UseDotNet@2
    inputs:
      version: "8.x"

  - task: DotNetCoreCLI@2
    displayName: Install BRM
    inputs:
      command: custom
      custom: tool
      arguments: install -g Azure.Bicep.RegistryModuleTool

  - task: PowerShell@2
    displayName: Validate Changed Module
    inputs:
      targetType: inline
      script: |
        bicep --version
        cd (gc .module-path)
        brm validate

  - task: NodeTool@0
    inputs:
      versionSpec: "16.x"
    displayName: Install Node.js

  - script: |
      npm ci
    displayName: Install NPM Modules

  - script: |
      npm run lint
    displayName: Run Linting

  - script: |
      npm run prettier:check
    displayName: Check formattting
